[meta title:"Idyll REGL" description:"Using Idyll with REGL for inline webgl" /]

[IdyllLogo /]

[Header
  title:"Using regl with Idyll"
  subtitle:"The stateless nature of regl makes it a good match for Idyll"
  author:"Matthew Conlen"
  authorLink:"https://twitter.com/" /]

If you haven't seen regl, go check out the website: [link href:"http://regl.party/" text:"http://regl.party/" /].
It's a really nice library for stateless WebGL programming, created by [link href:"https://0hz.life/" text:"Mikola Lysenko" /].
Because of the statelessness, regl commands are naturally parameterized, making it straightforward to include WebGL sketches
inline with your text in Idyll.

[var name:"d" value:0.5 /]
For example, with a minor modification to regl's [link href:"http://regl.party/examples" text:"particles example" /]
we can embed it in an Idyll document, and a dynamic variable to change the size of the particles.

Size: [dynamic value:d interval:0.1 min:0.1 max:8 /]

[Particles size:d /]

[var name:"t" value:0.04 /]
Or we can let a reader change the angle of rotation, Î¸ = [dynamic value:t interval:0.01 format:"0.2f"  /],
of this [link href:"http://regl.party/examples" text:"geomorphing bunny" /].

[Geomorph t:t /]

To do this, we can abstract out a component that uses [link href:"https://github.com/regl-project/multi-regl" text:"multi-regl" /]
to multiplex a single regl instance over the entire page. Then it is straightforward to create a custom component for
regl:

[gist gist:"0f83a12e29b268ffca39f471ecf39e91" file:"idyll-regl.js" /]


The `idyll-regl-component` handles taking control of the DOM from react, and instantiating the multiplexer.
This can be combined with many of Idyll's built-in components to quickly add interactivity.

For example, you could implement a play, pause button.

[var name:"play" value:1 /]
[var name:"frameOffset" value:0 /]

[Particles play:play frameOffset:frameOffset /]

[Button onClick:`play = 1 - play`]
[DisplayVar var:`play === 0 ? 'Play' : 'Pause'` /]
[/Button]

[div style:`{opacity: 1 - play}`]
And add a way to scrub through time:  [Range min:`-200` max:`200` value:frameOffset /]
[/div]

Read more about Idyll at [link href:"https://idyll-lang.github.io/" text:"https://idyll-lang.github.io/" /]