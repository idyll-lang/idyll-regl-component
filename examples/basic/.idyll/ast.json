[["meta",[["title",["value","Idyll REGL"]],["description",["value","Using Idyll with REGL for inline webgl"]]],[]],["IdyllLogo",[],[]],["Header",[["title",["value","Using regl with Idyll"]],["subtitle",["value","The stateless nature of regl makes it a good match for Idyll"]],["author",["value","Matthew Conlen"]],["authorLink",["value","https://twitter.com/"]]],[]],["p",[],["If you haven't seen regl, go check out the website: ",["link",[["href",["value","http://regl.party/"]],["text",["value","http://regl.party/"]]],[]],".\nIt's a really nice library for stateless WebGL programming, created by ",["link",[["href",["value","https://0hz.life/"]],["text",["value","Mikola Lysenko"]]],[]],".\nBecause of the statelessness, regl commands are naturally parameterized, making it straightforward to include WebGL sketches\ninline with your text in Idyll."]],["p",[],[["var",[["name",["value","d"]],["value",["value",0.5]]],[]],"\nFor example, with a minor modification to regl's ",["link",[["href",["value","http://regl.party/examples"]],["text",["value","particles example"]]],[]],"\nwe can embed it in an Idyll document, and a dynamic variable to change the size of the particles."]],["p",[],["Size: ",["dynamic",[["value",["variable","d"]],["interval",["value",0.1]],["min",["value",0.1]],["max",["value",8]]],[]]]],["Particles",[["size",["variable","d"]]],[]],["p",[],[["var",[["name",["value","t"]],["value",["value",0.04]]],[]],"\nOr we can let a reader change the angle of rotation, Î¸ = ",["dynamic",[["value",["variable","t"]],["interval",["value",0.01]],["format",["value","0.2f"]]],[]],",\nof this ",["link",[["href",["value","http://regl.party/examples"]],["text",["value","geomorphing bunny"]]],[]],"."]],["Geomorph",[["t",["variable","t"]]],[]],["p",[],["To do this, we can abstract out a component that uses ",["link",[["href",["value","https://github.com/regl-project/multi-regl"]],["text",["value","multi-regl"]]],[]],"\nto multiplex a single regl instance over the entire page. Then it is straightforward to create a custom component for\nregl:"]],["gist",[["gist",["value","0f83a12e29b268ffca39f471ecf39e91"]],["file",["value","idyll-regl.js"]]],[]],["p",[],["The ",["code",[],["idyll-regl-component"]]," handles taking control of the DOM from react, and instantiating the multiplexer.\nThis can be combined with many of Idyll's built-in components to quickly add interactivity."]],["p",[],["For example, you could implement a play, pause button."]],["div",[],[["var",[["name",["value","play"]],["value",["value",1]]],[]],["var",[["name",["value","frameOffset"]],["value",["value",0]]],[]]]],["Particles",[["play",["variable","play"]],["frameOffset",["variable","frameOffset"]]],[]],["Button",[["onClick",["expression","play = 1 - play"]]],[["DisplayVar",[["var",["expression","play === 0 ? 'Play' : 'Pause'"]]],[]]]],["div",[["style",["expression","{opacity: 1 - play}"]]],[["p",[],["\nAnd add a way to scrub through time:  ",["Range",[["min",["expression","-200"]],["max",["expression","200"]],["value",["variable","frameOffset"]]],[]]]]]],["p",[],["Read more about Idyll at ",["link",[["href",["value","https://idyll-lang.github.io/"]],["text",["value","https://idyll-lang.github.io/"]]],[]]]]]